<div
  id="persistent_live_view"
  data-role="persistent_live_view"
  class="relative z-[999999999999999999999999]"
>
  <Bonfire.UI.Common.SmartInputContainerLive
    :if={!e(@smart_input_opts, :inline_only, nil) and
      !e(@smart_input_opts, :disable, nil)}
    id={:smart_input}
    as_icon
    to_circles={@to_circles}
    to_boundaries={@to_boundaries}
    composer_class="btn fixed right-6 bottom-6 btn-lg btn-circle shadow-xl btn-primary"
    smart_input_opts={@smart_input_opts}
  />
  <Bonfire.UI.Common.NotificationLive id={:notification} root_flash={@flash} i={2} />
  <Bonfire.UI.Common.ReusableModalLive id="persistent_modal" />
  <Bonfire.UI.Common.ReusableModalLive id="media_player_modal" />

  <div class="absolute">
    <!-- <div class="pt-2 hidden md:flex items-center justify-end tablet-lg:justify-between">
      <Bonfire.UI.Common.LogoLinkLive with_name href="/dashboard" />
      <div class="hidden tablet-lg:block">
        <Bonfire.UI.Common.UserMenuLive />
      </div>
    </div> -->
    <!-- <div class="flex items-center justify-end flex-1">
      <div :if={!Config.get([:ui, :hide_app_switcher])} class="dropdown dropdown-end">
        <label tabindex="0" class="relative btn btn-sm">
          <#Icon iconify="ci:grid-round" class="w-5 h-5" />
        </label>
        <div tabindex="0" class="z-50 p-2 shadow dropdown-content bg-neutral rounded-box">
          <Bonfire.UI.Common.AppsLive />
        </div>
      </div>

    </div> -->

    <!-- <Bonfire.UI.Common.NotificationLive id={:notification} root_flash={@flash} i={2} />
    <Bonfire.UI.Common.ReusableModalLive id="persistent_modal" />
    <Bonfire.UI.Common.ReusableModalLive id="media_player_modal" /> -->
  </div>

  {!--
  <!-- # NOTE: sticky feed, see https://github.com/bonfire-networks/bonfire-app/issues/901 -->
  <div class="relative z-[-1]">
    <Bonfire.UI.Common.PreviewContentLive id="preview_content">
      <:extra_contents>
        <div
          id="the_extra_contents"
          class="border rounded-xl bg-base-100 border-base-content/10"
          data-role="persistent_feed"
        >
          <!-- persistent feed -->
          <StatefulComponent
            module={maybe_component(Bonfire.UI.Social.FeedLive, @__context__)}
            id={:persistent_feed}
            feed_name={:default}
            show_back_button
            tab_path_prefix="/feed/"
          />
        </div>
      </:extra_contents>
    </Bonfire.UI.Common.PreviewContentLive>
  </div> --}
</div>
