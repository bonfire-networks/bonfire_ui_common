<div
  id={@id}
  data-theme={if Settings.get(
       [:ui, :theme, :preferred],
       :system,
       assigns[:__context__] || assigns[:current_user] || @conn
     ) == :light,
     do:
       Settings.get(
         [:ui, :theme, :instance_theme_light],
         "light",
         assigns[:__context__] || assigns[:current_user] || @conn
       ),
     else:
       Settings.get(
         [:ui, :theme, :instance_theme],
         "bonfire",
         assigns[:__context__] || assigns[:current_user] || @conn
       )}
  class={
    "",
    @modal_class,
    "modal modal-bottom sm:modal-middle max-h-[100%] z-[999999999999999999]": !@no_backdrop,
    "fixed left-0 z-[99999999] bottom-0": @no_backdrop,
    "modal-closed": !@show,
    "modal-open": @show
  }
  {...@opts}
>
  <div
    :if={!@no_backdrop}
    x-transition:enter="ease-out duration-300"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="ease-in duration-200"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    x-description="Background backdrop, show/hide based on modal state."
    phx-click="close"
    phx-target={"[id='#{@id}']"}
    class="fixed inset-0 transition-opacity bg-slate-600/60 backdrop-blur-md -z-1"
    aria-hidden="true"
  >
  </div>
  {!-- if the modal should be wrapped in a form use the form tag, otherwise use a div --}
  <.dynamic_tag
    name={if @form_opts != %{}, do: "form", else: "div"}
    id={@form_opts[:id] || "#{@id}_box"}
    class={Surface.css_class(["text-base-content", "modal-box ": !@image_preview, "h-full": @no_backdrop])}
    phx-target={e(@form_opts, "phx-target", nil) || @myself}
    {...Enums.naughty_to_atoms!(@form_opts)}
  >
    <div
      x-transition:enter="ease-out duration-300"
      x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
      x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
      x-transition:leave="ease-in duration-200"
      x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
      x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
      x-description="Modal panel, show/hide based on modal state."
      class={"relative z-[99999]", @wrapper_class}
    >
      <h3 :if={!@no_header} class={@title_class || "font-bold text-base line-clamp-1 px-2 max-w-full"}>
        <#slot {@title}>{@title_text}</#slot>
      </h3>
      <div class={
        "absolute top-0 right-0 block z-50",
        "-mt-3 !fixed !top-6 !right-4": !@no_backdrop,
        "z-[999999999] !top-1 h-full": @no_backdrop
      }>
        <button
          phx-click="close"
          phx-target={"[id='#{@id}']"}
          type="button"
          class={
            "normal-case btn-sm btn-ghost btn btn-circle opacity-70",
            "!rounded-none !btn-xs btn-secondary": @no_backdrop
          }
        >
          <span class="sr-only">{l("Close")}</span>
          <#Icon outline="X" class="w-5 h-5" />
        </button>
      </div>

      <div
        class={
          "",
          "max-h-[calc(100vh_-_13rem)]": !@image_preview,
          "h-[95%]": @no_backdrop
        }
        data-id="modal-contents"
      >
        <#slot {@default, autocomplete: @autocomplete, value: @value} />
      </div>

      <div :if={!@no_actions} class="modal-action">
        <div phx-click="close" phx-target={"[id='#{@id}']"}>
          <#slot {@cancel_btn}>
            <button class={@cancel_btn_class || "btn btn-ghost rounded btn-sm normal-case"} type="button">{@cancel_label || l("Close")}</button>
          </#slot>
        </div>
        <div class={@action_btns_wrapper_class}>
          <#slot {@action_btns}>
            <button :if={@form_opts != %{}} class="normal-case rounded btn btn-primary btn-sm" type="submit">{l("OK")}</button>
          </#slot>
        </div>
      </div>
    </div>
  </.dynamic_tag>
</div>
