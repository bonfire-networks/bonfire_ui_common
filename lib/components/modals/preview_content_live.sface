<div
  id={@id}
  data-id="preview_content"
  data-show={e(@show, false)}
  data-hide={!e(@show, false)}
  class={"#{@modal_class} #{if !e(@show, false), do: 'hidden'}"}
  {...@opts}
>
  <div id="the_preview_contents" class={if !e(@show, false), do: "hidden"}>
    {!-- Header with back button --}
    <div class="sticky block backdrop-blur-sm top-2 mt-2 rounded-box shadow bg-base-100/70 z-[999]">
      <div role="banner" class="flex items-center h-[48px] flex-1 w-full px-4">
        <div class="flex items-center w-full">
          <div class="flex items-center flex-1 w-full gap-2">
            <button
              id="close_preview"
              :hook="ClosePreview"
              aria-label={l("Go back to the previous page")}
              class="btn z-50 btn-ghost btn-sm btn-circle"
            >
              <#Icon outline="ChevronLeft" class="w-4 h-4" />
            </button>
            <!-- WIP: Here we should dinamically show the activity type: Article, Note, Event, Review, etc -->
            <span class="max-w-[250px] lg:max-w-[600px] font-semibold text-base-content truncate text-ellipsis">
              {l("Discussion")}
            </span>
          </div>
        </div>
      </div>
    </div>

    {!-- Content container --}
    <div class="relative z-30">
      <div
        class="p-0 z-[910] modal_invisible relative pb-1px md:pb-2 rounded-xl shadow bg-base-100 mt-3"
        data-id="modal-contents"
      >
        <#slot>
          {!-- Render appropriate component based on modal_assigns --}
          {#if !e(@modal_assigns, :loaded, nil)}
            <div class="m-3 text-center p-8 rounded-lg flex items-center place-content-center">
              <span class="loading loading-ring loading-xl" />
              <span class="sr-only">{l("Loading...")}</span>
            </div>
          {#elseif e(@modal_assigns, :modal_component_stateful?, nil) == true and
              module_enabled?(@modal_assigns[:modal_component], @__context__)}
            <StatefulComponent
              id="preview_component"
              module={@modal_assigns[:modal_component]}
              {...@modal_assigns}
            />
          {#elseif not is_nil(e(@modal_assigns, :modal_component, nil)) and
              module_enabled?(@modal_assigns[:modal_component], @__context__)}
            <StatelessComponent
              module={@modal_assigns[:modal_component]}
              myself={@myself}
              {...@modal_assigns}
            />
          {#elseif not is_nil(e(@modal_assigns, :modal_view, nil)) and
              module_enabled?(@modal_assigns[:modal_view], @__context__)}
            {live_render(@socket, @modal_assigns[:modal_view],
              id: "modal_view",
              session: %{"params" => @modal_assigns}
            )}
          {#else}
            <div class="m-3 text-center p-8 rounded-lg border border-base-content/30 flex items-center place-content-center">{warn(@modal_assigns, "No preview component or view available") &&
                l("Oops, no preview component is available.")}</div>
          {/if}
        </#slot>
      </div>
    </div>
  </div>
</div>
