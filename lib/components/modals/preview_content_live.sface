<div
  id={@id}
  class={
    "#{@modal_class} absolute z-[99999999999] md:h-full h-[calc(var(--inner-window-height)_-_58px)] overflow-y-auto overflow-x-hidden inset-0 bg-base-300",
    invisible: !@show,
    "visible z-[999]": @show
  }
  {...@opts}
>
  <div :if={@show} class="relative z-30">
    <div class="p-0 z-[910] modal_invisible relative" data-id="modal-contents">
        <!-- <button
          id="close_preview"
          phx-click="Bonfire.UI.Common.OpenPreviewLive:close"
          phx-hook="ClosePreview"
          aria-label={l("Go back to the previous page")}
          class="absolute font-normal normal-case top-4 left-4 btn btn-circle"
        >
          <Icon outline="X" class="w-5 h-5 text-base-content" />
        </button> -->
      <#slot>
        {#case merge_as_map(@modal_assigns, %{showing_within: :preview})
          |> debug("preview_component modal_assigns")}
          {#match modal_assigns}
            {#if not is_nil(e(modal_assigns, :preview_component, nil)) and
                module_enabled?(modal_assigns[:preview_component])}
              <Dynamic.LiveComponent
                id="preview_component"
                module={modal_assigns[:preview_component]}
                {...modal_assigns}
              />
            {#elseif not is_nil(e(modal_assigns, :preview_view, nil)) and module_enabled?(modal_assigns[:preview_view])}
              {live_render(@socket, modal_assigns[:preview_view],
                id: "preview_view",
                session: %{"params" => modal_assigns}
              )}
            {#else}
              {l("No preview component or view is available.")}
            {/if}
        {/case}
      </#slot>
    </div>
  </div>
</div>
