<div
  aria-live="assertive"
  class="app_notifications fixed inset-0 flex  px-4 py-6 sm:px-6 sm:pt-10 z-[99999999999999999] pointer-events-none items-start"
>
  <div class="flex flex-col items-center w-full space-y-4 sm:items-end">
    <div
      :if={@i == 2}
      id="connection-status"
      class="hidden rounded-md bg-red-50 p-4 fixed top-1 right-1 width-[280px] fade-in-scale z-50"
      js-show={show("#connection-status")}
      js-hide={hide("#connection-status")}
    >
      <p class="text-sm font-medium text-red-800" role="alert">
        {l("Offline - waiting to reconnect...")}
        <a
          class="btn btn-error btn-outline ml-2 btn-xs rounded normal-case"
          href="javascript:liveSocket.connect()"
        >Try again</a>
      </p>
    </div>

    <div
      id={"notification-#{@i}"}
      phx-hook="Notification"
      role="alert"
      class="w-full max-w-md overflow-hidden transition duration-300 ease-in-out transform rounded shadow-lg pointer-events-auto bg-info flash"
    >
      <div :if={@notification} class="p-4">
        <div class="flex items-start">
          <div class="flex-shrink-0">
            {#case e(@notification, :icon, nil)}
              {#match icon when is_binary(icon)}
                <img src={icon} class="w-10 h-10 rounded">
              {#match _}
                <#Icon outline="Speakerphone" class="w-5 h-5 text-info-content" />
            {/case}
          </div>
          <div class="ml-3 w-0 flex-1 pt-0.5">
            <p class="text-sm font-medium text-info-content">{e(@notification, :title, "Notification")}</p>
            <div data-id="flash" data-type="notification" class="text-sm text-info-content/80">{rich(e(@notification, :message, ""))}</div>
            <LiveRedirect
              :if={e(@notification, :url, nil)}
              to={e(@notification, :url, nil)}
              class="text-sm capitalize !text-info-content link"
            >
              {l("Show")}
            </LiveRedirect>
          </div>
          <div :if={socket_connected?(@__context__)} class="">
            <button
              phx-click="clear-flash"
              phx-target={@myself}
              phx-value-key="notification"
              type="button"
              class="btn btn-sm btn-circle btn-info"
            >
              <span class="sr-only">{l("Close")}</span>
              <#Icon solid="X" class="w-5 h-5" />
            </button>
          </div>
        </div>
      </div>
    </div>

    {#case @info || e(@root_flash || @flash, :info, nil)}
      {#match nil}
      {#match info}
        <div
          role="alert"
          class="w-full max-w-md overflow-hidden transition duration-300 ease-in-out transform rounded shadow-lg pointer-events-auto bg-info flash"
        >
          <div class="p-4">
            <div class="flex items-center">
              <div class="flex-shrink-0 p-2">
                <#Icon outline="Speakerphone" class="w-5 h-5 text-info-content" />
              </div>
              <div class="ml-3 w-0 flex-1 pt-0.5">
                <div data-id="flash" data-type="info" class="text-sm text-info-content">{rich(info)}</div>
              </div>
              <div :if={socket_connected?(@__context__)} class="">
                <button
                  phx-click="clear-flash"
                  phx-target={@myself}
                  phx-value-key="info"
                  type="button"
                  class="btn btn-sm text-info-content btn-circle btn-ghost"
                >
                  <span class="sr-only">{l("Close")}</span>
                  <#Icon solid="X" class="w-4 h-4" />
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- <div class="max-w-md alert alert-info fade-out" 
      role="alert alert-warning"
      phx-click="clear-flash"
      phx-target={@myself}
      phx-value-key="info">
        {rich info}
    </div> -->
    {/case}

    {#case @error ||
        e(@root_flash || @flash, :error, nil)}
      {#match nil}
      {#match error}
        <div
          role="alert"
          class="w-full max-w-md overflow-hidden transition duration-300 ease-in-out transform rounded shadow-lg pointer-events-auto bg-error flash"
        >
          <div class="p-4">
            <div class="flex items-top">
              <div class="flex-shrink-0">
                <#Icon outline="Exclamation" class="w-6 h-6 text-error-content" />
              </div>
              <div class="ml-3 w-0 flex-1 pt-0.5">
                <div
                  data-id="flash"
                  data-type="error"
                  class={
                    "prose text-sm text-error-content",
                    "!text-xs": Config.env() == :dev
                  }
                >
                  {markdown(error)}
                </div>

                <Bonfire.UI.Common.FeedbackButtonLive
                  class="mt-2 normal-case rounded btn btn-sm btn-ghost text-error-content btn-active"
                  event="Bonfire.Social.Posts:write_error"
                />
              </div>
              <div :if={socket_connected?(@__context__)} class="">
                <button
                  phx-click="clear-flash"
                  phx-target={@myself}
                  phx-value-key="error"
                  type="button"
                  class="btn btn-sm btn-circle btn-error"
                >
                  <span class="sr-only">{l("Close")}</span>
                  <#Icon solid="X" class="w-5 h-5" />
                </button>
              </div>
            </div>
          </div>
        </div>
    {/case}
  </div>
</div>