<div class="relative z-20">
  {#case @current_user == nil or @object_type in [Bonfire.Data.Social.Message] or
      Bonfire.Boundaries.can?(@__context__, :like, @object_boundary)}
    {#match true}
      <button
        :if={@object_id}
        id={@id}
        data-id="like_action"
        phx-click="Bonfire.Social.Likes:like"
        phx-value-direction={"#{if @my_like, do: "down", else: "up"}"}
        phx-value-id={@object_id}
        phx-value-component={__MODULE__}
        phx-value-current_count={e(@like_count, 0)}
        class="btn btn-ghost btn-circle like like_with_label btn-sm"
        title={l("Like this")}
      >
        <span class={"text-base-content text-opacity-50", "text-yellow-500 text-opacity-100": @my_like}>
          <Icon solid="Star" :if={@my_like} class="w-5 h-5" />
          <Icon outline="Star" :if={!@my_like} class="w-4 h-4" />
        </span>

        <span :if={!@my_like} class="sr-only">
          {l("Like")}
          <span :if={e(@like_count, 0) > 0 and Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, @__context__)}>{e(@like_count, 0)}</span>
        </span>
        <span :if={@my_like} class="sr-only">
          {l("Liked")}
          <span :if={e(@like_count, 0) > 0 and Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, @__context__)}>{e(@like_count, 0)}</span>
        </span>
      </button>
    {#match false}
      <button
        type="button"
        class="btn btn-ghost btn-circle like like_with_label btn-sm cursor-not-allowed"
        title={l("You can't like this")}
      >
        <span class="text-base-content text-opacity-20">
          <Icon outline="Star" class="w-4 h-4" />
        </span>

        <span class="sr-only">
          {l("Cannot Like")}
          <span :if={e(@like_count, 0) > 0 and Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, @__context__)}>{e(@like_count, 0)}</span>
        </span>
      </button>
    {#match _}
  {/case}
</div>
