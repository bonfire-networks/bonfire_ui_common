<div x-data={"{ theme: '#{@theme}'}"} title="Change Theme" class="text-left w-52 dropdown">
  <!--  
   id="theme-change"
  phx-hook="Themeable" -->
  <!-- note: the phx-hook has the advantage of changing the theme instantly without reloading, but it's an odd behaviour if changing the light theme while we're using the dark theme, or if changing the default instance theme while we have a different one in user preferences... -->

  <input name={"ui[theme][#{@key}]"} x-model="theme" type="hidden">
  <!-- note: LV phx-change seems to ignore alpine changing this hidden input, so using phx-click on the options below instead -->

  <div tabindex="0" class="items-center w-52 select select-bordered">
    <span x-text="theme">{@theme}</span>
  </div>

  <div class="dropdown-content bg-base-200 text-base-content rounded-t-box rounded-b-box top-px max-h-96 h-[70vh] w-52 overflow-y-auto shadow-2xl mt-16">
    <div class="grid grid-cols-1 gap-3 p-3" tabindex="0">
      {#for t <- @themes}
        <div
          data-set-theme={t}
          data-act-class="ACTIVECLASS"
          x-on:click={"theme = '#{t}'"}
          phx-click="Bonfire.Me.Settings:put_theme"
          phx-value-keys={"ui:theme:#{@key}"}
          phx-value-values={t}
          class="overflow-hidden rounded-lg outline-base-content"
        >
          <div data-theme={t} class="w-full font-sans cursor-pointer bg-base-100 text-base-content">
            <div class="grid grid-cols-5 grid-rows-3">
              <div class="flex col-span-5 row-span-3 row-start-1 gap-1 px-4 py-3">
                <div class="flex-grow text-sm font-bold">{t}</div>
                <div class="flex flex-wrap flex-shrink-0 gap-1">
                  <div class="w-2 rounded bg-primary" />
                  <div class="w-2 rounded bg-secondary" />
                  <div class="w-2 rounded bg-accent" />
                  <div class="w-2 rounded bg-neutral" />
                </div>
              </div>
            </div>
          </div>
        </div>
      {#else}
        {l("No known themes")}
      {/for}
    </div>
  </div>
</div>