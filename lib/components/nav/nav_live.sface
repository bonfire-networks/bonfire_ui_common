<div 
  x-data="{
    show_mobile_composer: false, 
    open_sidebar_drawer: false,
    open_drawer: false
  }"
  :class="show_mobile_composer ? '!grid-cols-1 !place-content-start' : ''"
  class={"h-screen max-w-screen-lg tablet:max-w-screen-xl tablet-lg:max-w-screen-2xl mx-auto my-3 px-3 justify-center grid-cols-1 md:grid-cols-[290px_minmax(auto,_580px)] tablet-lg:grid-cols-[repeat(auto-fit,_290px)] grid gap-3  bonfire_layout"}>
  <Bonfire.UI.Common.SidebarLive
    current_user={current_user(assigns)}
    page={@page}
    reply_to_id={@reply_to_id}
    thread_id={@thread_id}
    showing_within={e(assigns, :showing_within, nil)}
    create_activity_type={e(assigns, :create_activity_type, nil)}
    to_circles={e(assigns, :to_circles, [])}
    smart_input_prompt={@smart_input_prompt}
    smart_input_text={@smart_input_text}
    sidebar_widgets={@sidebar_widgets}
    thread_mode={e(assigns, :thread_mode, nil)}
    hide_smart_input={e(assigns, :hide_smart_input, false)}
  />
  <div 
    :class="show_mobile_composer ? '!hidden' : ''"
    class="w-full tablet:col-span-1 tablet-lg:col-span-2">
    <!-- <Bonfire.UI.Common.HeaderUserLive 
      page={@page}
      without_sidebar={@without_sidebar}
      current_user={current_user(assigns)}  
    /> -->
    <div class="grid grid-rows-[60px_1fr]">
      <Bonfire.UI.Common.PageHeaderLive
        page_title={e(assigns, :page_title, nil)}
        page_header_drawer={e(assigns, :page_header_drawer, false)}
        current_user={current_user(assigns)}
      >
        <:right_action>
          <Surface.Components.Dynamic.Component
            :if={current_user(assigns) && e(assigns, :page_header_aside, nil)}
            :for={{component, component_assigns} <- e(assigns, :page_header_aside, [])}
            module={component}
            current_user={current_user(assigns)}
            {...component_assigns}
          />
        </:right_action>
        
      </Bonfire.UI.Common.PageHeaderLive>
      <!-- This example requires Tailwind CSS v2.0+ -->
      <div class="overflow-x-hidden overflow-y-auto feed bg-base-100 rounded-b-md">
        {@inner_content}
      </div>
    </div>

  </div>
  <div 
    :class="show_mobile_composer ? '!hidden' : ''"
    class="items-start hidden grid-flow-row gap-3 overflow-x-hidden overflow-y-auto widget tablet-lg:grid auto-rows-min ">
    <div 
      :if={module_enabled?(Bonfire.Search.Web.FormLive) && current_user(assigns)}
      class="sticky top-0 z-20">
      <Surface.Components.Dynamic.Component
        module={Bonfire.Search.Web.FormLive}
        search_limit={5}
      />
    </div>
    <Surface.Components.Dynamic.Component
      :if={current_user(assigns)}
      :for={{component, component_assigns} <- @sidebar_widgets[:users][:secondary] || [ 
        {Bonfire.UI.Social.WidgetTagsLive, []},
        {Bonfire.UI.Common.WidgetFeedbackLive, []}
      ]}
      module={component}
      current_user={current_user(assigns)}
      {...component_assigns}
    />

    <Surface.Components.Dynamic.Component
      :if={!current_user(assigns)}
      :for={{component, component_assigns} <- @sidebar_widgets[:guests][:secondary] || [
          {Bonfire.UI.Social.WidgetTagsLive, []}
      ]}
      module={component}
      {...component_assigns}
    />
  </div>

  <div 
    :if={current_user(assigns) != nil and e(assigns, :hide_smart_input, nil) != true}
    x-show="!show_mobile_composer"
    class="fixed bottom-0 z-[90] right-3 bottom-3 tablet-lg:hidden">
    <button 
      @click="show_mobile_composer = true"
      type="button" 
      class="items-center btn btn-circle btn-primary btn-lg place-content-center ">
      <Solid.PencilAltIcon class="w-6 h-6" />
    </button>
  </div>

  <div class="absolute z-50 bottom-0 transition-all right-4 w-[40rem]">
    <header class="flex flex-row w-full px-2 py-1.5 rounded-t bg-base-200 flex-align-items-stretch flex-nowrap">
      <span class="flex-1 text-sm cursor-move text-ellipsis user-select-none">{l "New post"}</span>
      <div class="flex items-center space-x-3">
        <button 
          type="button" 
          class="flex " 
          data-testid="composer:minimize-button" 
          aria-describedby="tooltip-5527">
          <Outline.MinusIcon class="w-4 h-4 stroke-1 text-base-content/70" />
          <span class="sr-only">{l "Minimize"}</span>
        </button>
        <button 
          type="button" 
          class="flex " 
          data-testid="composer:maximize-button" 
          aria-describedby="tooltip-5528">
          <Outline.ArrowsExpandIcon class="w-4 h-4 stroke-1 text-base-content/70" />
          <span class="sr-only">{l "Expand full screen"}</span>
        </button>
        <button 
          type="button" 
          class="flex" 
          data-testid="composer:close-button" 
          aria-describedby="tooltip-5529">
          <Outline.XIcon class="w-4 h-4 stroke-1 text-base-content/70" />
          <span class="sr-only">{l "Close"}</span>
        </button>
      </div>
    </header>
   <Bonfire.UI.Common.SmartInputLive
      :if={e(assigns, :thread_mode, nil) != :flat and e(assigns, :hide_smart_input, nil) != true}
      id={:smart_input} 
      hide_smart_input={e(assigns, :hide_smart_input, nil)}
      current_user={current_user(assigns)}
      showing_within={e(assigns, :showing_within, nil)}
      reply_to_id={e(assigns, :reply_to_id, "")}
      thread_id={@thread_id}
      create_activity_type={e(assigns, :create_activity_type, nil)}
      thread_mode={e(assigns, :thread_mode, nil)}
      to_circles={e(assigns, :to_circles, [])}
      smart_input_prompt={@smart_input_prompt}
      smart_input_text={@smart_input_text}
    />
  </div>
</div>