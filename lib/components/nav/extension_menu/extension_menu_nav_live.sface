<div class="gap-1 tablet-lg:gap-0">
  {#case @nav_items
    |> Enum.filter(fn nav ->
      (!nav[:exclude_from_nav] and is_nil(nav[:module])) or
        maybe_module(nav[:module], @__context__)
    end)
    |> debug("nav_items")}
    {#match nav_items when is_list(nav_items) and nav_items != []}
      <ul
        class="p-0 w-[220px]"
        data-id={"#{@parent_id}_nav_links"}
        data-showing-within={@showing_within}
      >
        {!-- TODO: override widget[:module] with the result of maybe_module so it doesn't need to be run again in the widget --}
        {#case Enum.split_with(nav_items, fn %{type: type} -> type == :link end)}
          {#match {nav_links, nav_widgets}}
            <Bonfire.UI.Common.WidgetsLive
              id={"#{@parent_id}_extension_nav_links"}
              showing_within={@showing_within}
              widgets={nav_links}
              page={@page}
              selected_tab={@selected_tab}
              skip_badges={@skip_badges}
              container_class="menu p-0 w-full"
            />

            <Bonfire.UI.Common.WidgetsLive
              id={"#{@parent_id}_extension_nav_widgets"}
              showing_within={@showing_within}
              widgets={nav_widgets}
              page={@page}
              selected_tab={@selected_tab}
              skip_badges={@skip_badges}
            />
        {/case}
      </ul>
    {#match _}
      {!-- no nav_items --}
  {/case}
</div>
