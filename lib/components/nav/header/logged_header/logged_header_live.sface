<div class={
  "flex items-center border-b border-base-content/5 md:justify-between pr-4 py-1 md:gap-4 h-[56px] bg-base-100 sticky z-[999] top-0",
  "hidden md:flex": @without_mobile_logged_header
}>
  <div class="flex items-center md:w-[230px] desktop-lg:w-[320px]">
    <Bonfire.UI.Common.AppsLive
      nav_items={@nav_items}
      sidebar_widgets={@sidebar_widgets}
      page={@page}
      selected_tab={@selected_tab}
    />
    <div class="hidden md:block">
      <Bonfire.UI.Common.LogoLinkLive with_name href="/?dashboard" />
    </div>
    <!-- <div class="hidden md:block tablet-lg:w-full">
      <Dynamic.Component
        :if={module_enabled?(Bonfire.Search.Web.FormLive, @__context__)}
        module={Bonfire.Search.Web.FormLive}
        search_limit={5}
      />
    </div> -->
    <!-- <Dynamic.Component
      module={elem(@custom_page_header || {Bonfire.UI.Common.PageHeaderLive, nil}, 0)}
      page_title={@page_title}
      page_header_drawer={e(@page_header_drawer, false)}
      {...elem(@custom_page_header || {nil, []}, 1) |> debug("custom_page_header")}
    >
      <:right_action>
        <Dynamic.Component
          :if={@current_user && @page_header_aside}
          :for={{component, component_assigns} <- e(@page_header_aside, [])}
          module={component}
          {...component_assigns}
        />
      </:right_action>
    </Dynamic.Component> -->
  </div>
  <div class="flex-1 md:hidden">
    <Bonfire.UI.Common.LogoLinkLive with_name href="/?dashboard" />
  </div>

  <div class="hidden md:block max-w-[420px] w-full">
    <Dynamic.Component
      :if={module_enabled?(Bonfire.Search.Web.FormLive, @__context__)}
      module={Bonfire.Search.Web.FormLive}
      search_limit={5}
    />
  </div>

  <!-- <ul class="hidden justify-between gap-2 md:flex items-center max-w-[500px] w-full menu menu-horizontal menu-compact">
    <li
      data-tip={l("My feed")}
      class={"tooltip tooltip-bottom flex-1", "border-b-2 border-primary": @page == "feed"}
      >
      <LiveRedirect to="/feed" class="w-full pb-3 rounded-md place-content-center">
        <Icon iconify="noto:newspaper" class="w-6 h-6 text-base-content/80" />
        <span class="sr-only">{l("My feed")}</span>
      </LiveRedirect>
    </li>
    <li
      data-tip={l("Local feed")}
      class={"flex-1 tooltip tooltip-bottom", "border-b-2 border-primary": @page == "local"}
    >
      <LiveRedirect
        to={if current_user(@current_user), do: "/feed/local", else: "/local"}
        class="w-full pb-3 rounded-md place-content-center"
      >
        <Icon iconify="material-symbols:camping-rounded" class="w-6 h-6 text-base-content/80" />
        <span class="sr-only">{l("Local")}</span>
      </LiveRedirect>
    </li>
    <li
      data-tip={l("Remote feed")}
      class={"flex-1 tooltip tooltip-bottom", "border-b-2 border-primary": @page == "federation"}
    >
      <LiveRedirect
        to={if current_user(@current_user), do: "/feed/federation", else: "/federation"}
        class="w-full pb-3 rounded-md place-content-center"
      >
        <Icon iconify="el:network" class="w-6 h-6 text-base-content/80" />
        <span class="sr-only">{l("Remote")}</span>
      </LiveRedirect>
    </li>
    <li
      data-tip={l("My favourites")}
      class={"flex-1 tooltip tooltip-bottom", "border-b-2 border-primary": @page == "likes"}
    >
      <LiveRedirect to="/feed/likes" class="w-full pb-3 rounded-md place-content-center">
        <Icon iconify="bi:stars" class="w-6 h-6 text-base-content/80" />
        <span class="sr-only">{l("Favourites")}</span>
      </LiveRedirect>
    </li>
  </ul> -->

  <div class="flex items-center gap-2 tablet-lg:w-[320px] justify-end">
    <Bonfire.UI.Common.SmartInputContainerLive
      hide_smart_input={@hide_smart_input}
      showing_within={@showing_within}
      reply_to_id={e(@reply_to_id, "")}
      context_id={@context_id}
      create_object_type={@create_object_type}
      thread_mode={@thread_mode}
      without_sidebar={@without_sidebar}
      to_boundaries={@to_boundaries}
      to_circles={@to_circles}
      smart_input_as={@smart_input_as}
      smart_input_prompt={@smart_input_prompt}
      smart_input_opts={@smart_input_opts}
    />

    <LiveRedirect
      to={path(Bonfire.Data.Social.Message)}
      class={
        "hidden md:flex btn btn-circle h-[40px] w-[40px] relative btn-sm",
        "btn-primary": @page == "messages"
      }
    >
      <Icon solid="Mail" class="w-5 h-5" />
      <span :if={@page == "messages"} class="sr-only">{l("Current Page:")}
      </span>
      <Bonfire.UI.Common.BadgeCounterLive
        id={:inbox}
        class="absolute -right-2 indicator-item badge-sm badge -top-1 badge-primary !border-none"
      />
    </LiveRedirect>

    <LiveRedirect
      to={path(:notifications)}
      class={
        "hidden md:flex btn btn-circle btn-sm h-[40px] relative w-[40px]",
        "btn-primary": @page == "notifications"
      }
    >
      <Icon solid="Bell" class="w-5 h-5" />
      <span :if={@page == "notifications"} class="sr-only">{l("Current Page:")}
      </span>
      <Bonfire.UI.Common.BadgeCounterLive
        id={:notifications}
        class="absolute -right-2 indicator-item badge badge-sm -top-1 badge-primary !border-none"
      />
    </LiveRedirect>

    <div class="hidden md:block">
      <Bonfire.UI.Common.UserMenuLive />
    </div>

    <button
      @click="toggle_sidebar_widgets = true"
      :if={is_list(@sidebar_widgets[:users][:secondary])}
      class="btn btn-sm btn-ghost tablet-lg:hidden"
    >
      <Icon iconify="akar-icons:sidebar-right" class="w-5 h-5 text-base-content/70" />
    </button>
  </div>
</div>

<div 
  @keydown.window.escape="toggle_sidebar_widgets = false" 
  x-show="toggle_sidebar_widgets" 
  class="relative z-10" 
  :if={is_list(@sidebar_widgets[:users][:secondary])}
  aria-labelledby="slide-over-title" 
  x-ref="dialog" 
  aria-modal="true">
  <div x-description="Background backdrop, show/hide based on slide-over state." class="fixed inset-0"></div>

  <div class="fixed inset-0 overflow-hidden">
    <div class="absolute inset-0 overflow-hidden">
      <div class="fixed inset-y-0 right-0 top-[56px] flex max-w-full pl-10 pointer-events-none">
        
          <div 
            x-cloak
            x-show="toggle_sidebar_widgets" 
            x-transition:enter="transform transition ease-in-out duration-500 sm:duration-700" 
            x-transition:enter-start="translate-x-full" 
            x-transition:enter-end="translate-x-0" 
            x-transition:leave="transform transition ease-in-out duration-500 sm:duration-700" 
            x-transition:leave-start="translate-x-0" 
            x-transition:leave-end="translate-x-full" 
            class="w-screen max-w-md pointer-events-auto" 
            x-description="Slide-over panel, show/hide based on slide-over state." 
            @click.away="toggle_sidebar_widgets = false">
            <div class="flex flex-col h-full py-3 overflow-y-scroll shadow-xl bg-base-300">
              <div class="px-4 sm:px-6">
                <div class="flex items-start justify-between">
                  <h2 class="text-lg font-medium sr-only text-base-content" id="slide-over-title">{l "Widgets"}</h2>
                  <div class="flex items-center">
                    <button type="button" class="btn btn-sm btn-circle" @click="toggle_sidebar_widgets = false">
                      <span class="sr-only">Close panel</span>
                      <svg class="w-5 h-5" x-description="Heroicon name: outline/x-mark" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
              <div class="relative flex flex-col flex-1 gap-3 px-4 mt-3 sm:px-6">
                <Dynamic.Component
                  :if={ulid(@current_user)}
                  :for={{component, component_assigns} <-
                    @sidebar_widgets[:users][:secondary] ||
                      [
                        {Bonfire.Tag.Web.WidgetTagsLive, []},
                        {Bonfire.UI.Common.WidgetFeedbackLive, []}
                      ]}
                  module={component}
                  {...component_assigns}
                />

                <Dynamic.Component
                  :if={!@current_user}
                  :for={{component, component_assigns} <- @sidebar_widgets[:guests][:secondary] || []}
                  module={component}
                  {...component_assigns}
                />
              </div>
            </div>
          </div>
        
      </div>
    </div>
  </div>
</div>





<!-- 
<div
  :if={is_list(@sidebar_widgets[:users][:secondary])}
  x-cloak
  x-show="toggle_sidebar_widgets"
  @keydown.window.escape="toggle_sidebar_widgets = false;"
  class="fixed top-[0] right-0 bottom-0 left-0 z-[200] overflow-hidden"
  >
  <div class="inset-0 h-full overflow-hidden">
    <div
      @click="toggle_sidebar_widgets = false"
      class="absolute inset-0 overflow-hidden bg-base-300/30"
    />
    <section class="h-full" aria-labelledby="slide-over-heading">
      <div
        class="relative w-3/4 h-full overflow-auto md:w-80 bg-base-200"
        x-description="Slide-over panel, show/hide based on slide-over state."
        x-show="toggle_sidebar_widgets"
        x-transition:enter="transform transition ease-in-out duration-150 sm:duration-200"
        x-transition:enter-start="translate-x-full"
        x-transition:enter-end="translate-x-0"
        x-transition:leave="transform transition ease-in-out duration-150 sm:duration-200"
        x-transition:leave-start="translate-x-0"
        x-transition:leave-end="translate-x-full"
      >
        <div class="relative w-full h-full p-4 bg-base-200">
          <Dynamic.Component
            :if={ulid(@current_user)}
            :for={{component, component_assigns} <-
              @sidebar_widgets[:users][:secondary] ||
                [
                  {Bonfire.Tag.Web.WidgetTagsLive, []},
                  {Bonfire.UI.Common.WidgetFeedbackLive, []}
                ]}
            module={component}
            {...component_assigns}
          />

          <Dynamic.Component
            :if={!@current_user}
            :for={{component, component_assigns} <- @sidebar_widgets[:guests][:secondary] || []}
            module={component}
            {...component_assigns}
          />
        </div>
      </div>
    </section>
  </div>
</div> -->