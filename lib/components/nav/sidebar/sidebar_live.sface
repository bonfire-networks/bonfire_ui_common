<div 
    x-on:resize.window="show_mobile_composer = (window.innerWidth > 1200) ? false : show_mobile_composer"
    :class="show_mobile_composer ? '!grid !overflow-hidden' : ''"
    class="items-start hidden grid-flow-row gap-3 my-3 overflow-x-hidden overflow-y-auto tablet-lg:grid auto-rows-min ">
    {#if current_user(assigns)}
      <div class="sticky top-0 z-20">
        <Bonfire.UI.Common.LogoLive />
      </div>
      <Bonfire.UI.Common.UserMenuLive  current_user={current_user(assigns)} />
      <Bonfire.UI.Common.SmartInputLive
        :if={e(assigns, :thread_mode, nil) != :flat and e(assigns, :hide_smart_input, nil) != true}
        id={:smart_input} 
        hide_smart_input={e(assigns, :hide_smart_input, nil)}
        current_user={current_user(assigns)}
        showing_within={e(assigns, :showing_within, nil)}
        reply_to_id={e(assigns, :reply_to_id, "")}
        thread_id={@thread_id}
        create_activity_type={e(assigns, :create_activity_type, nil)}
        thread_mode={e(assigns, :thread_mode, nil)}
        to_circles={e(assigns, :to_circles, [])}
        smart_input_prompt={@smart_input_prompt}
        smart_input_text={@smart_input_text}
      />
      {#if is_list(@sidebar_widgets[:users][:main])}
        <Surface.Components.Dynamic.Component
          :for={{component, component_assigns} <- @sidebar_widgets[:users][:main]}
          module={component}
          current_user={current_user(assigns)}
          {...component_assigns}
        />
      {/if}
    {#else}
      <!-- GUESTS -->
      <Surface.Components.Dynamic.Component
        :for={{component, component_assigns} <- @sidebar_widgets[:guests][:main] || [ 
          {Bonfire.UI.Common.WidgetInstanceInfoLive, []},
          {Bonfire.UI.Social.WidgetTimelinesLive, []},
        ]}
        module={component}
        {...component_assigns}
      />
    {/if} 
    
  </div>