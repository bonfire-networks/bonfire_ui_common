<div class={@widget[:wrapper_class] || @wrapper_class} data-type="widget">
  {#case @widget[:type]}
    {#match :link}
      <LinkLive
        to={if is_function(@widget[:href]),
          do: @widget[:href].(@__context__),
          else: @widget[:href]}
        class={@widget[:link_class] || @link_class ||
          if @showing_within != :dashboard,
            do: "flex items-center w-full gap-4 px-2 py-2 rounded-md",
            else: "block w-full"}
      >
        <div class="flex-1 relative flex items-center gap-5 widget_content">
          <span :if={!@without_icon && (@widget[:icon] || @widget[:icon_active])} class="">
            {#if not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])}
              <Iconify.iconify
                icon={@widget[:icon_active]}
                class={@widget[:icon_class] || @icon_class, "!text-base-content"}
              />
            {#else}
              <Iconify.iconify icon={@widget[:icon]} class={@widget[:icon_class] || @icon_class} />
            {/if}
          </span>
          <span
            :if={(not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])) or
              (not is_nil(@widget[:module]) and e(@__context__, :current_view, nil) == @widget[:module])}
            class="sr-only"
          >{l("Current Page:")}
          </span>
          <span
            :if={!@without_label}
            class={
              @text_class ||
                ["font-medium text-base-content/80 flex-1 text-[15px] widget_text"],
              "!font-bold !text-base-content":
                not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])
            }
          >{@widget[:text] || @widget[:name]}</span>
        </div>
        {#case @widget[:badge]}
          {#match nil}
          {#match badge}
            <div class="flex absolute left-7 top-0 items-center place-content-center widget_notification">
              <Dynamic.LiveComponent
                id={badge[:id] || Text.random_string()}
                module={Bonfire.UI.Common.BadgeCounterLive}
                feed_id={badge[:feed_id] || e(current_user(@__context__), :character, badge[:feed_key], nil)}
              />
            </div>
        {/case}
      </LinkLive>
    {#match Surface.Component}
      <Dynamic.Component
        module={@widget[:module]}
        showing_within={@showing_within}
        page={@page}
        selected_tab={@selected_tab}
        {...@data}
      />
    {#match Surface.LiveComponent}
      <Dynamic.LiveComponent
        id={Text.random_string()}
        module={@widget[:module]}
        page={@page}
        selected_tab={@selected_tab}
        showing_within={@showing_within}
        {...@data}
      />
    {#match nil}
    {#match other}
      {error(other) && "<-- invalid widget -->"}
  {/case}
</div>