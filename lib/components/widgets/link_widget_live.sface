<div class={@widget[:wrapper_class] || @wrapper_class} data-type="widget">
  <LinkLive
    to={if is_function(@href),
      do: @href.(@__context__),
      else: @href}
    class={e(
      e(@widget[:link_class], @link_class),
      if(@showing_within != :dashboard,
        do:
          "flex items-center justify-end w-full gap-2 tablet-lg:gap-4 px-2 py-1 tablet-lg:py-2 rounded-full",
        else: "block w-full"
      )
    )}
  >
    <div class="flex-1 justify-end relative flex items-center gap-5 widget_content">
      <span :if={!@without_icon && (@icon || @widget[:icon] || @widget[:icon_active])} class="">
        {#if not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])}
          <Iconify.iconify
            icon={@widget[:icon_active] || @icon || @widget[:icon]}
            class={@widget[:icon_class] || @icon_class, "!text-base-content"}
          />
        {#else}
          <Iconify.iconify icon={@icon || @widget[:icon]} class={@widget[:icon_class] || @icon_class} />
        {/if}
      </span>
      <span
        :if={(not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])) or
          (not is_nil(@widget[:module]) and e(@__context__, :current_view, nil) == @widget[:module])}
        class="sr-only"
      >{l("Current Page:")}
      </span>
      <span
        :if={!@without_label}
        class={
          e(
            @text_class,
            ["font-normal hidden tablet-lg:block text-base-content/90 flex-1 text-[15px] widget_text"]
          ),
          "!font-bold !text-base-content":
            not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])
        }
      >{@text || @widget[:text] || @widget[:name]}</span>
    </div>
    {#case @widget[:badge]}
      {#match nil}
      {#match badge}
        <div
          :if={!@skip_badges or (is_list(@skip_badges) and badge[:id] not in @skip_badges)}
          class="flex absolute left-7 top-0 items-center place-content-center widget_notification"
        >
          <Dynamic.LiveComponent
            id={badge[:id] || Text.random_string()}
            module={Bonfire.UI.Common.BadgeCounterLive}
            feed_id={badge[:feed_id] || e(current_user(@__context__), :character, badge[:feed_key], nil)}
          />
        </div>
    {/case}
  </LinkLive>
</div>