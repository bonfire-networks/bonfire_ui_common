<LinkLive
  to={if is_function(@to),
    do: @to.(@__context__),
    else: @to}
  id={"#{@parent_id}_#{@order || random_dom_id()}"}
  class={
    e(@widget[:link_class], @link_class),
    "menu-active":
      @page == @widget[:page] or
        String.downcase(to_string(@selected_tab)) == String.downcase(to_string(@widget[:page]))
  }
  label={@text || @widget[:text] || @widget[:name]}
  phx_hook={@widget[:phx_hook]}
>
  <!-- <div class={@content_class}>
    <span :if={!@without_icon && (@icon || @widget[:icon] || @widget[:icon_active])} class=""> -->
  <!-- {#if not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])}
        <Iconify.iconify
          icon={@icon || @widget[:icon]}
          class={@widget[:icon_class] || @icon_class, "!text-base-content"}
        />
      {#else} -->
  <div
    :if={!@without_icon && (@icon || @widget[:icon])}
    class="w-7 h-7 rounded-lg bg-base-content/10 flex items-center place-content-center shadow-lg"
  >
    <Iconify.iconify icon={@icon || @widget[:icon]} class={@widget[:icon_class] || @icon_class} />
  </div>
  <!-- {/if} -->
  <!-- </span>
    <span
      :if={(not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])) or
        (not is_nil(@widget[:module]) and e(@__context__, :current_view, nil) == @widget[:module])}
      class="sr-only"
    >{l("Current Page:")}
    </span> -->
  <!-- <span
      data-type="widget_label"
      :if={!@without_label}
      class={
        @text_class,
        "!font-bold !text-base-content":
          not is_nil(@widget[:page]) and (@page == @widget[:page] or @selected_tab == @widget[:page])
      } 
    >-->
  <span class="text-base-content/80 font-medium">{@text || @widget[:text] || @widget[:name]}</span>
  <!-- </span> -->
  <!-- </div> -->
  {#case @widget[:badge]}
    {#match nil}
    {#match badge}
      <div
        data-highlighted={Settings.get([Bonfire.UI.Common.BadgeCounterLive, :highlight], false, @__context__)}
        :if={!@skip_badges or (is_list(@skip_badges) and badge[:id] not in @skip_badges)}
        class={@badge_class}
      >
        <StatefulComponent
          id={badge[:id] || random_dom_id()}
          page={@page}
          module={maybe_component(Bonfire.UI.Common.BadgeCounterLive, @__context__)}
          feed_id={badge[:feed_id] || e(current_user(@__context__), :character, badge[:feed_key], nil)}
        />
      </div>
  {/case}
</LinkLive>
