{#case ((not is_nil(current_user_id(@__context__)) and e(@widgets, :users, @key, nil)) ||
     (is_nil(current_user_id(@__context__)) and e(@widgets, :guests, @key, nil)) || [])
  |> Enum.map(fn
    {component, component_assigns} ->
      %{
        module: component,
        data: component_assigns,
        type: component_assigns[:type] || Surface.Component
      }

    %{} = widget ->
      widget

    other ->
      debug(other, "unsupported")
      nil
  end)
  |> Enums.filter_empty([])}
  {#match widgets when is_list(widgets) and widgets != []}
    <Bonfire.UI.Common.WidgetsLive
      widgets={widgets}
      page={@page}
      selected_tab={@selected_tab}
      showing_within={:sidebar}
      container_class="flex flex-col gap-3 mb-3"
      id={deterministic_dom_id(__MODULE__, nil, "extension_nav_links", @parent_id)}
    />
  {#match _}
    <!-- No widgets -->
{/case}