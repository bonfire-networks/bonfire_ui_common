{#case ((not is_nil(current_user_id(@__context__)) and e(@widgets, :users, @key, nil)) ||
     (is_nil(current_user_id(@__context__)) and e(@widgets, :guests, @key, nil)) || [])
  |> Enum.map(fn
    {component, component_assigns} ->
      %{module: component, type: component_assigns[:type] || Surface.Component}

    %{} = widget ->
      widget

    other ->
      debug(other, "unsupported")
      nil
  end)
  |> Enums.filter_empty([])}
  {#match widgets when is_list(widgets) and widgets != []}
    <Bonfire.UI.Common.WidgetsLive
      widgets={widgets}
      key={:secondary}
      page={@page}
      selected_tab={@selected_tab}
      showing_within={:sidebar}
      container_class="flex flex-col gap-3"
      id={"#{@parent_id}_sidebar_widgets"}
    />
  {#match _}
    <!-- No widgets -->
{/case}