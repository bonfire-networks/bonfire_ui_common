<div class="flex-1">
  <div>
    {!-- <Bonfire.UI.Common.SmartInputButtonsLive
      :if={!e(@smart_input_opts, :hide_buttons, nil)}
      smart_input_opts={@smart_input_opts}
      smart_input_component={@smart_input_component}
      create_object_type={@create_object_type}
      class="fixed right-3 md:static bottom-[72px] flex-1 btn text-sm md:w-auto btn-square h-[64px] w-[64px] md:h-[38px] md:min-h-[38px] md:max-h-[38px] bg-base-content/90 text-base-100/90 md:bg-primary md:text-primary-content md:btn-primary rounded-xl md:rounded shadow flex items-center gap-2 normal-case"
    /> --}
    <div class="sticky top-0 md:mt-2 flex items-center flex-1 w-full justify-end tablet-lg:justify-start">
      <Bonfire.UI.Common.SmartInputButtonLive
        showing_within={:smart_input}
        smart_input_opts={@smart_input_opts}
        prompt={e(@smart_input_opts, :prompt, l("Compose"))}
        icon={e(@smart_input_opts, :icon, "mdi:pencil")}
        class="hidden md:flex !h-[2.5rem] !min-h-[2.5rem] w-[2.5rem] tablet-lg:!min-h-auto tablet-lg:!px-[1rem] tablet-lg:!h-auto tablet-lg:!w-auto btn-circle btn btn-primary !rounded-full flex items-center gap-2 place-content-center normal-case"
      />

      {!-- 
      Note: not including these props because we want the main button to open ther post composer by default, or whatever other type is already selected (until the smart input is reset)
      smart_input_component={@smart_input_component}
      create_object_type={@create_object_type} --}
    </div>

    {#if not is_nil(current_user_id(@__context__))}
      <Bonfire.UI.Common.ComposerMinimizedLive />
      <div
        id="smart_input_container"
        class={
          "w-full md:h-auto block flex-col flex-1 grow smart_input_show_on_open fixed visible md:rounded-t-lg max-w-full bg-base-200 mx-auto z-[9999] shadow-composer md:right-4 bottom-0 md:w-[32rem] md:right-4 md:top-auto max-h-screen",
          "!inset-0 !top-[5%] !h-[400px]":
            Settings.get([Bonfire.UI.Common.SmartInputContainerLive, :show_focused], false, @__context__),
          hidden: e(@smart_input_opts, :open, nil) != true
        }
      >
        <div class="w-full rounded-t-lg bg-gradient-to-t from-transparent to-base-content/40 p-[0.05rem] flex flex-col flex-1 h-full grow">
          <div class="w-full rounded-t-lg bg-base-200 flex flex-col flex-1 h-full grow">
            {!-- "md:!w-[20rem] tablet-lg:block bottom-0": e(@smart_input_opts, :minimized, nil) == true, --}

            <div
              :if={Settings.get([Bonfire.UI.Common.SmartInputContainerLive, :show_focused], false, @__context__)}
              phx-click={LiveHandler.close_smart_input()}
              phx-target="#smart_input"
              class={
                "smart_input_backdrop fixed inset-0 cursor-pointer bg-base-300/20 backdrop-blur",
                hidden: e(@smart_input_opts, :open, nil) == false
              }
              style="-webkit-backdrop-filter: blur(8px);"
            />

            <div class="smart_input_modal relative z-50 md:rounded-t-lg flex flex-col grow h-full">
              <Bonfire.UI.Common.SmartInputHeaderModalLive smart_input_opts={@smart_input_opts} />

              <div
                x-ref="smart_input"
                id="smart_input_live"
                class="rounded-t-lg flex-1 h-full bg-base-100 grow relative z-[9999999999]"
              >
                <SmartInputLive
                  boundaries_modal_id={:modal_composer}
                  showing_within={@showing_within}
                  reply_to_id={@reply_to_id}
                  context_id={@context_id}
                  smart_input_component={@smart_input_component}
                  create_object_type={@create_object_type}
                  open_boundaries={@open_boundaries}
                  to_boundaries={@to_boundaries}
                  to_circles={@to_circles}
                  exclude_circles={@exclude_circles}
                  mentions={@mentions}
                  smart_input_opts={@smart_input_opts}
                  activity={@activity}
                  object={@object}
                  uploads={@uploads}
                  uploaded_files={@uploaded_files}
                  trigger_submit={@trigger_submit}
                  reset_smart_input={@reset_smart_input}
                  activity_inception={@activity_inception}
                  preview_boundary_for_id={@preview_boundary_for_id}
                  preview_boundary_for_username={@preview_boundary_for_username}
                  preview_boundary_verbs={@preview_boundary_verbs}
                  boundary_preset={@boundary_preset}
                />

                <form
                  class="flex-1 h-full grow"
                  :if={@create_object_type != :message}
                  phx-change="select"
                  phx-target={@myself}
                >
                  {!-- CUSTOM BOUNDARIES --}
                  <div class="hidden flex-1 h-full grow" id="extra_boundaries">
                    <div class="flex flex-col h-full">
                      <div class="flex w-full flex-1 h-full">
                        <Dynamic.Component
                          :if={@create_object_type != :message and
                            Bonfire.Boundaries.Web.SetBoundariesButtonLive.clone_context(@to_boundaries) == false and
                            module_enabled?(Bonfire.Boundaries.Web.SetBoundariesLive)}
                          module={Bonfire.Boundaries.Web.SetBoundariesLive}
                          to_boundaries={@to_boundaries}
                          boundary_preset={@boundary_preset}
                          to_circles={@to_circles}
                          exclude_circles={@exclude_circles}
                          open_boundaries={@open_boundaries}
                          showing_within={@showing_within}
                          create_object_type={@create_object_type}
                          boundaries_modal_id={@boundaries_modal_id}
                          context_id={@context_id}
                          hide_breakdown
                          click_override
                        />
                      </div>
                    </div>
                  </div>

                  {!-- PREVIEW BOUNDARIES --}
                  <div class="hidden flex-1 h-full grow" id="boundaries_preview">
                    <div class="flex flex-col h-full">
                      <Dynamic.LiveComponent
                        :if={module_enabled?(Bonfire.Boundaries.Web.PreviewBoundariesLive) and
                          Bonfire.Boundaries.Web.SetBoundariesButtonLive.clone_context(@to_boundaries) == false}
                        module={Bonfire.Boundaries.Web.PreviewBoundariesLive}
                        id="boundaries_preview"
                        preview_boundary_for_id={@preview_boundary_for_id}
                        preview_boundary_for_username={@preview_boundary_for_username}
                        preview_boundary_verbs={@preview_boundary_verbs}
                        boundary_preset={@boundary_preset}
                        to_boundaries={@to_boundaries}
                        to_circles={@to_circles}
                      />
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    {/if}
  </div>
</div>