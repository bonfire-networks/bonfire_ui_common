<div
  :if={Enum.count(@uploads.files.entries) > 0}
  class="p-2 border-b border-base-content/20 uploads_preview"
>
  <div class="flex gap-3 scrollable">
    {#for {entry, i} <- Enum.with_index(@uploads.files.entries)}
      <article
        id={"upload-preview-#{i}"}
        data-img={"phx-preview-#{i}"}
        data-ref={entry.upload_ref}
        class="relative upload-entry border border-base-content/20 min-w-40"
      >
        {!-- phx-hook="imageMetadata" --}
        <div class="absolute top-0 z-10 w-full h-10 rounded-lg l-0 r-0 md:h-14 bg-gradient-to-b from-black to-transparent" />
        <figure class="w-[160px] h-[100px]">
          {#if String.starts_with?(entry.client_type, "image")}
            {!-- render a client-side preview --}
            <div>
              <.live_img_preview entry={entry} />
            </div>
            <figcaption class="sr-only">{entry.client_name}</figcaption>
          {#elseif String.contains?(entry.client_type, "pdf")}
            <div class="w-full rounded h-[84px] flex items-center place-content-center justify-center">
              <#Icon iconify="bxs:file-pdf" class="w-12 h-12" />
            </div>
            <figcaption class="mx-1 text-xs truncate">{entry.client_name}</figcaption>
          {#elseif String.starts_with?(entry.client_type, "video")}
            <div class="w-full rounded h-[84px] flex items-center place-content-center justify-center">
              <#Icon iconify="majesticons:video" class="w-12 h-12" />
            </div>
            <figcaption class="mx-1 text-xs truncate">{entry.client_name}</figcaption>
          {#elseif String.starts_with?(entry.client_type, "audio")}
            <div class="w-full rounded h-[84px] flex items-center place-content-center justify-center">
              <#Icon iconify="majesticons:music" class="w-12 h-12" />
            </div>
            <figcaption class="mx-1 text-xs truncate">{entry.client_name}</figcaption>
          {#else}
            <div class="w-full rounded h-[84px] flex items-center place-content-center justify-center">
              <#Icon iconify="carbon:document" class="w-12 h-12" />
            </div>
            <figcaption class="mx-1 text-xs truncate">{entry.client_name}</figcaption>
          {/if}
        </figure>

        {!-- <progress :if={ entry.progress < 100} value={entry.progress} max="100"> { entry.progress }% </progress> --}

        <Bonfire.UI.Common.InlineModalLive
          id={"upload_#{entry.ref}_description"}
          title_text={l("Add an alternative description")}
          value={nil}
          cancel_label={l("Done")}
        >
          {!-- reusable_modal_id={if @__context__[:sticky], do: "persistent_modal"}
        form_opts={%{"phx-submit"=> "set_value"}} --}
          <div class="mt-4">
            <div class="alert alert-info" role="alert">
              <#Icon solid="InformationCircle" class="w-5 h-5 shrink-0" />
              <span class="">
                {l(
                  "Adding an alternative description will improve the accessibility of your content, helping visually impaired people and others using screen reading tools."
                )}</span>
            </div>
          </div>
          <div class="px-1 mt-3">
            {!-- <span class="image_in_preview" :if={String.starts_with?(entry.client_type, "image")}>
              <.live_img_preview entry={entry} />
            </span> --}
            <textarea
              name={"upload_metadata[#{entry.ref}][label]"}
              placeholder="Type here"
              class="w-full mt-3 textarea bg-base-content/10"
            />
            {!-- TODO: edit previously entered desc --}
          </div>
          <:open_btn>
            <button
              type="button"
              class="absolute z-20 font-medium normal-case rounded glass top-2 left-2 btn btn-xs max-w-[100px]"
              aria-label="Add description"
            >
              <span class="">{l("Edit caption")}</span>
            </button>
            {!-- <input type="hidden" name={"upload_metadata[#{entry.ref}][label]"} value={value}> --}
          </:open_btn>
        </Bonfire.UI.Common.InlineModalLive>

        <button
          type="button"
          class="absolute z-20 btn-square btn-error rounded right-2 top-2 btn btn-xs"
          phx-click="cancel-upload"
          phx-target="#smart_input"
          phx-value-ref={entry.ref}
          aria-label="cancel"
        >
          <#Icon solid="Trash" class="w-4 h-4" />
          <span class="sr-only">{l("Delete")}</span>
        </button>
        {!-- a regular click event whose handler will invoke Phoenix.LiveView.cancel_upload/3 --}

        {#for err <- upload_errors(@uploads.files, entry)}
          <p class="alert alert-warning p-1">{error_to_string(err)}</p>
        {/for}
      </article>
    {/for}
  </div>
  {!-- <div class="flex items-center justify-end">
    <div class="form-control">
      <label class="label py-1 cursor-pointer">
        <input
          type="checkbox"
          name="sensitive"
          class="toggle toggle-primary toggle-text-xs"
          checked={Settings.get([Bonfire.UI.Social.UploadPreviewsLive, :mark_as_sensitive], false, @__context__)}
        />
        <span class="label-text text-base-content/70 text-text-xs ml-2">{l("Mark as sensitive")}</span>
      </label>
    </div>
  </div> --}
  {#for err <- upload_errors(@uploads.files)}
    <p class="alert alert-danger">{error_to_string(err)}</p>
  {/for}
</div>