<div x-show="!open_boundaries">

  <Bonfire.UI.Social.UploadPreviewsLive uploads={@uploads} />

  <div class="">

      <div class={
        "flex items-center justify-between p-2 space-x-2 border-t rounded-b-md border-base-content/10 bg-base-200 sm:px-3",
        "!border-none !bg-base-100 mt-2 !p-0": e(@thread_mode, nil) == :flat}>
        <div class="flex items-center flex-1 space-x-1">
          <Bonfire.UI.Common.UploadButtonLive
            :if={!is_messaging?(assigns) && module_enabled?(Bonfire.Files)}
            uploads={e(@uploads, nil)}
            thread_mode={e(@thread_mode, nil)}
          />

          <div 
            data-tip={l "Add a content warning" }
            class={"relative z-30 flex items-center tooltip tooltip-right"}>
            <button
              :if={Bonfire.Common.Config.get([:ui, :smart_input, :cw], []) == true}
              type="button"
              @click="title_open = !title_open"
              :class="{'border-base-content/30' : title_open}"
              class="flex items-center btn btn-ghost btn-sm btn-circle">
              <span 
                class="text-xs font-medium text-base-content text-opacity-70">{l "CW"}</span>
            </button>
          </div>
          
          <div 
            :if={e(@showing_within, nil) != :page and e(@thread_mode, nil) != :flat}
            x-show="!show_smart_input_modal"
            data-tip={l "Full-screen mode" }
            class={"relative z-20 flex items-center tooltip tooltip-right"}>
              <button 
                type="button"
                @click="show_smart_input_fullscreen = !show_smart_input_fullscreen"
                :class="{'border-base-content/30' : show_smart_input_fullscreen}"
                class="flex items-center btn btn-ghost btn-sm btn-circle">
              <Outline.ArrowsExpandIcon class="w-4 h-4 mx-auto text-base-content text-opacity-70" />
            </button>
          </div> 

        </div>
        <button 
          type="submit" 
          @click="$dispatch('submit')"
          phx-disable-with={if is_messaging?(assigns), do: l("Sending..."), else: l "Posting..."} 
          class="capitalize btn-sm justify-self-end btn w-[8rem] btn-primary">
          {#if is_messaging?(assigns)}
            {l "Send"}
          {#else}
            {l "Post"}
          {/if}
        </button>
      </div>
    
    <input type="hidden" 
      name="reply_to[reply_to_id]" 
      value={@reply_to_id} />
    <input type="hidden"  
      name="reply_to[thread_id]" 
      value={@thread_id} />

    <input type="hidden" 
      name={:create_activity_type}
      value={@create_activity_type} />

    <input 
      :for={circle <- e(@to_circles, [])} 
      type="hidden" 
      name="to_circles[]" 
      label={if is_tuple(circle), do: elem(circle, 0)} 
      value={if is_tuple(circle), do: elem(circle, 1), else: circle} 
    />
  </div>
</div>