<div
  x-cloak
  x-on:click="smart_input_minimized = !smart_input_minimized; smart_input_fullscreen = false"
  x-show="!open_boundaries"
  class="left-0 m-0 block right-0 border-base-300 border w-full bg-base-200 sticky top-0 z-[99999] cursor-pointer p-3 md:hidden"
>
  <div class="flex items-center gap-2 p-2-b">
    <Icon iconify="heroicons-solid:arrow-left" class="w-5 h-5 stroke-1 text-neutral-content" />
    <span class="text-sm text-neutral-content">{l("Back")}</span>
  </div>
</div>
<div id="composer_container" data-id="smart_input" class="flex-1 h-full grow">
  <!-- 'hidden': !smart_input_open  && #{Settings.get([:ui, :smart_input_as], nil, @__context__) != :sidebar && @thread_mode != :flat} -->
  <div
    id="smart_input"
    phx-drop-target={@uploads.files.ref}
    x-data={"{
      title_open: #{if is_nil(@title_open) and @create_object_type not in [:post], do: true, else: @title_open == true}, 
    }"}
    @submit="open_boundaries = false"
    x-cloak
    :class="{
      'smart-input-open': title_open,
      'smart-input-open-boundaries': open_boundaries,
    }"
    class={
      "flex bg-transparent h-full grow flex-1",
      "bottom-0 !max-w-full !border-none !rounded-none":
        e(@thread_mode, nil) == :flat or
          is_messaging?(%{
            page: @page,
            showing_within: @showing_within,
            create_object_type: @create_object_type
          }),
      "h-full": @showing_within == :page
    }
  >
    <div
      :if={not is_nil(current_user(@__context__))}
      class="relative flex flex-col flex-1 w-full bg-base-300"
    >
      <div
        x-show="!open_boundaries"
        :if={is_map(@activity) || is_map(@reply_to_id)}
        class="bg-base-300 !rounded-none  relative"
      >
        <!-- show what we're replying to, if any -->
        <Dynamic.Component
          module={Bonfire.UI.Social.ActivityLive}
          myself={nil}
          activity={@activity}
          object={@object || @reply_to_id}
          thread_mode={:nested}
          class={@replied_activity_class}
          show_minimal_subject_and_note
          showing_within={:smart_input}
          activity_inception={@activity_inception}
          object_boundary={:skip}
        />
      </div>

      <Dynamic.Component
        module={active_smart_input_component(@smart_input_component, @create_object_type)}
        textarea_container_class={Surface.css_class([
          "h-full flex-1 flex flex-col grow",
          "min-h-[50px]": @thread_mode == :flat,
          "min-h-[240px]": @thread_mode != :flat
        ])}
        textarea_container_class_alpine="{}"
        textarea_class={Surface.css_class([
          "editor_area textarea p-0 h-full w-full rounded-none",
          "min-h-[50px] border border-base-content/30": @thread_mode == :flat,
          "!min-h-[240px]": @thread_mode != :flat or @showing_within in [:page],
          "!h-full !min-h-[420px]": @showing_within in [:compose]
        ])}
        {...assigns}
      />
    </div>
  </div>
  <!-- <noscript>
    <style type="text/css">
      #smart_input {display: block !important;}
      /* .smart_input_container header {display: none;} */
      .input_boundaries button {display: none;} /* FIXME: make boundary selection work without JS */
    </style>
  </noscript> -->
</div>
