<div
  id="smart_input_live"
  style="display: flex;
  flex-direction: column;
  height: 100vh;
  position: relative;"
  class="pt-safe rounded-xl flex-1 h-full bg-base-100 grow relative z-[]"
>
  <div id="composer_container" data-id="smart_input" class="flex-1 h-full grow rounded-xl">
    <div
      id="smart_input"
      phx-drop-target={@uploads.files.ref}
      class="flex bg-transparent rounded-xl h-full grow flex-1"
    >
      <div
        :if={not is_nil(current_user_id(@__context__))}
        class="relative overflow-y-auto overflow-x-hidden lg:max-h-[95vh] min-h-0 flex flex-col flex-1 w-full bg-base-200 rounded-xl"
      >
        <div :if={is_map(@activity) || is_map(@reply_to_id)} class="border-b border-base-content/10">
          <div class="relative reply_in_composer rounded-t-box max-h-[160px] bg-base-200/50 overflow-y-auto overflow-x-hidden p-2 flex flex-col">
            {!-- show what we're replying to, if any --}
            <StatelessComponent
              module={maybe_component(Bonfire.UI.Social.ActivityLive, @__context__)}
              activity_component_id={deterministic_dom_id(
                __MODULE__,
                id(@reply_to_id) || id(@object) || id(@activity),
                e(@reply_to_id, nil)
              )}
              myself={nil}
              activity={@activity}
              cw={e(post_content(@object), :summary, nil)}
              object={@object || @reply_to_id}
              thread_mode={:nested}
              class={@replied_activity_class}
              show_minimal_subject_and_note={Bonfire.UI.Social.ActivityLive.name_or_text(@object) || true}
              showing_within={:smart_input}
              activity_inception={@activity_inception}
              object_boundary={:skip_boundary_check}
            />

            <span
              phx-click="Bonfire.UI.Common.SmartInput:remove_data"
              phx-target="#smart_input"
              class="absolute top-2 right-2 btn btn-xs btn-ghost btn-circle"
              title={l("Cancel Reply")}
            >
              <span class="sr-only">{l("Cancel Reply")}</span>
              <#Icon solid="X" class="w-4 h-4 text-base-content/70" />
            </span>

            {!-- 
            # WIP, also without an at mention you are not necessarily replying to the user (i.e. they may not be notified) but only to a post/comment, so this may be misleading
            <div
              class="border-t border-base-content/10 text-xs backdrop-blur-xl sticky bottom-0 p-2 font-semibold text-center text-base-content z-10"
              style="pointer-events: none;"
            >
              {l("Replying to @brembs@mastodon.social’s post")}
            </div> --}
          </div>
        </div>

        <div
          :if={e(@activity, :subject, nil) != nil and
            !Bonfire.Social.is_local?(
              e(@activity, :subject, nil),
              false
            ) and
            !maybe_apply(Bonfire.Federate.ActivityPub, :federating?, current_user(@__context__),
              context: @__context__,
              fallback_return: false
            )}
          class="badge badge-warning m-2 mb-0 h-auto"
        >{l(
            "Warning: You are replying to a remote activity but federation is disabled. This means only users on your local instance will see your reply unless federation is later turned on."
          )}</div>

        <!-- <Bonfire.UI.Common.SmartInputHeaderModalLive smart_input_opts={@smart_input_opts} /> -->
        <header class="z-50 flex items-center gap-3 justify-between w-full sticky top-0 px-3 py-2 lg:rounded-t-xl bg-base-100 md:z-auto md:relative">
          <div class="flex items-center gap-3">
          <div
          class=""
            title={e(current_user(@__context__), :profile, :name, nil) ||
              e(current_user(@__context__), :character, :username, nil)}
          >
            <Bonfire.UI.Common.AvatarLive
              bg_class="rounded-full"
              wrapper_class="border-0 avatar !flex w-10 h-10"
              class="inline-block object-cover w-full rounded-full"
              src={Media.avatar_url(current_user(@__context__))}
              user_id={current_user_id(@__context__)}
            />
          </div>
          {#if e(@smart_input_opts, :create_object_type, nil) not in ["message", :message]}
            <div class="">
              <StatelessComponent
                module={maybe_component(Bonfire.UI.Boundaries.SetBoundariesButtonLive, @__context__)}
                to_boundaries={@to_boundaries}
                boundary_preset={@boundary_preset}
                preview_boundary_for_id={@preview_boundary_for_id}
                preview_boundary_for_username={@preview_boundary_for_username}
                preview_boundary_verbs={@preview_boundary_verbs}
                to_circles={@to_circles}
                exclude_circles={@exclude_circles}
                verb_permissions={@verb_permissions}
                setting_boundaries={:create_object}
              />
            </div>
          {/if}
          </div>
          <div class="flex flex-row gap-3 items-center flex-align-items-stretch flex-nowrap">
            <span>
              <Bonfire.UI.Common.OpenModalLive
                id="close_composer"
                reusable_modal_id="persistent_modal"
                title_text={l("Delete the draft")}
                cancel_label={l("Cancel")}
                open_btn_wrapper_class=""
              >
                <div class="mt-3 prose-sm prose">
                  <p>{l("Closing the composer will discard your post. Are you sure you want to close it?")}</p>
                </div>
                <:open_btn>
                  <div class="link link-primary link-hover text-sm">
                    <!-- <#Icon outline="X" class="w-4 h-4 text-primary/70" /> -->
                    <span class="">{l("Close")}</span>
                  </div>
                </:open_btn>
                <:action_btns>
                  <button
                    phx-click={JS.push("Bonfire.UI.Common.SmartInput:reset_to_default")
                    |> JS.hide(to: "#smart_input_summary")
                    |> JS.hide(to: "#smart_input_post_title")}
                    phx-target="#smart_input"
                    type="button"
                    class="normal-case btn btn-sm btn-error"
                  >
                    {l("Delete draft")}
                  </button>
                </:action_btns>
              </Bonfire.UI.Common.OpenModalLive>
            </span>
          

            <div class="flex items-center gap-2">
              <button
                phx-click={LiveHandler.minimize()}
                phx-target="#smart_input"
                type="button"
                class="flex btn btn-sm btn-ghost btn-circle"
              >
                <#Icon iconify="fluent:chevron-double-down-16-filled" class="w-4 h-4 text-base-content/70" />
              </button>
            </div>
          </div>
        </header>

        

        {#case LiveHandler.active_smart_input_component(
            @smart_input_component,
            e(@smart_input_opts, :create_object_type, nil)
          )}
          {#match module}
            {#if function_exported?(module, :mount, 1)}
              <StatefulComponent
                id="smart_input_component"
                module={module}
                textarea_class={Surface.css_class(["editor_area textarea p-0 w-full rounded-none"])}
                {...assigns}
              />
            {#else}
              <StatelessComponent
                module={module}
                textarea_class={Surface.css_class(["editor_area textarea p-0 w-full rounded-none"])}
                {...assigns}
              />
            {/if}
        {/case}
      </div>
    </div>
  </div>
</div>