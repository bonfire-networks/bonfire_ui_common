<div
  id="smart_input_live"
  class="rounded-xl flex-1 h-full bg-base-100 grow relative z-[9999999999]"
>
  <div id="composer_container" data-id="smart_input" class="flex-1 h-full grow rounded-xl">
    <div
      id="smart_input"
      phx-drop-target={@uploads.files.ref}
      class="flex bg-transparent rounded-xl h-full grow flex-1"
    >
      <div
        :if={not is_nil(current_user_id(@__context__))}
        class="relative flex flex-col flex-1 w-full bg-base-100 rounded-xl"
      >
        <div
          :if={is_map(@activity) || is_map(@reply_to_id)}
          class="relative bg-base-content/5 rounded-xl mt-0 m-2"
        >
          {!-- show what we're replying to, if any --}
          <StatelessComponent
            module={maybe_component(Bonfire.UI.Social.ActivityLive, @__context__)}
            id={"compose_reply_to-#{id(@reply_to_id) || id(@object) || id(@activity)}"}
            myself={nil}
            activity={@activity}
            cw={e(post_content(@object), :summary, nil)}
            object={@object || @reply_to_id}
            thread_mode={:nested}
            class={@replied_activity_class}
            show_minimal_subject_and_note={Bonfire.UI.Social.ActivityLive.name_or_text(@object) || true}
            showing_within={:smart_input}
            activity_inception={@activity_inception}
            object_boundary={:skip_boundary_check}
          />

          <span
            phx-click="Bonfire.UI.Common.SmartInput:remove_data"
            phx-target="#smart_input"
            class="absolute top-2 right-2 btn btn-xs btn-ghost btn-circle"
            title={l("Cancel Reply")}
          >
            <span class="sr-only">{l("Cancel Reply")}</span>
            <#Icon solid="X" class="w-4 h-4 text-base-content/70" />
          </span>
        </div>
        {#case LiveHandler.active_smart_input_component(
            @smart_input_component,
            e(@smart_input_opts, :create_object_type, nil)
          )}
          {#match module}
            {#if function_exported?(module, :mount, 1)}
              <StatefulComponent
                id="smart_input_component"
                module={module}
                textarea_class={Surface.css_class(["editor_area textarea p-0 w-full rounded-none"])}
                {...assigns}
              />
            {#else}
              <StatelessComponent
                module={module}
                textarea_class={Surface.css_class(["editor_area textarea p-0 w-full rounded-none"])}
                {...assigns}
              />
            {/if}
        {/case}
      </div>
    </div>
  </div>
</div>