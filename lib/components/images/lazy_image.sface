{#case @src || Media.media_url(@media)}
  {#match src when is_binary(src)}
    {#case socket_connected?(@__context__) == true and Bonfire.Files.Blurred.blurhash_cached(@media)}
      {#match blurhash when is_binary(blurhash)}
        <!-- Path A: Full blurhash experience -->
        <div
          id={"blurHash-#{@parent_id}-#{Text.hash(blurhash)}"}
          :hook
          data-hash={blurhash}
          phx-update="ignore"
          class="w-full h-full"
          x-data="{ loaded: false }"
          x-intersect.once.margin.50px={"$el.querySelector('img').src = '#{src}'"}
        >
          <canvas class={@class} x-show="!loaded" x-transition.opacity.duration.300ms {...@opts} />
          <img
            x-cloak
            src=""
            alt={@alt}
            title={@title}
            class={@class}
            data-width={maybe_get(@media, [:metadata, :width]) || ""}
            data-height={maybe_get(@media, [:metadata, :height]) || ""}
            x-show="loaded"
            x-transition.opacity.duration.300ms
            x-on:load="loaded = true"
            decoding="async"
            {...@opts}
          />
        </div>
      {#match _}
        <!-- Path B: Simple lazy loading without blurhash -->
        <div
          id={"lzimg-#{@parent_id}-#{id(@media) || Text.hash(src)}"}
          phx-update="ignore"
          class="w-full h-full"
          x-data="{ loaded: false }"
          x-intersect.once.margin.50px={"$el.querySelector('img').src = '#{src}'"}
        >
          <!-- Simple skeleton placeholder -->
          <div
            class={[@class, "bg-base-200 animate-pulse"]}
            x-show="!loaded"
            x-transition.opacity.duration.300ms
            {...@opts}
          />
          <img
            x-cloak
            src=""
            alt={@alt}
            title={@title}
            class={@class}
            x-show="loaded"
            x-transition.opacity.duration.300ms
            x-on:load="loaded = true"
            decoding="async"
            {...@opts}
          />
        </div>
    {/case}
  {#match _}
    <!-- Path C: No src available, show fallback -->
    <div class="h-full place-content-center">
      <div class={"iconify", e(@fallback_class, nil)} iconify={@fallback_icon} />
    </div>
{/case}