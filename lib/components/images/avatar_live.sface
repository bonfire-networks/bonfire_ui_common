<div class="border-0 avatar">
  <div class={classes(%{viewing_main_object: @viewing_main_object, comment: @comment, class: @class}) <>
    " rounded"}>
    {#case @avatar_fallback || Media.avatar_fallback()}
      {#match avatar_fallback}
        {#case @src || Media.avatar_url(@user)}
          {#match url when is_binary(url) and url != avatar_fallback}
            <LazyImage
              title={@title}
              class=""
              src={url}
              alt={e(@user, :profile, :name, nil) || e(@user, :character, :username, nil) || e(@user, :name, nil) ||
                l("Avatar")}
              opts={@opts}
            />
          {#match _}
            {#if Settings.get([Bonfire.UI.Common.AvatarLive, :animal_avatars], true, @__context__)}
              <div
                id={Pointers.ULID.generate()}
                phx-hook="randomAnimalAvatar"
                title={@title}
                data-size={size(%{viewing_main_object: @viewing_main_object, comment: @comment, size: @size})}
                data-seed={ulid(@user) || ulid(@src) || @src}
                phx-update="ignore"
                {...@opts}
              />
            {#else}
              <img
                title={@title}
                class=""
                src={avatar_fallback}
                alt={e(@user, :profile, :name, nil) || e(@user, :character, :username, nil) || e(@user, :name, nil) ||
                  l("Avatar")}
                {...@opts}
              />
            {/if}
        {/case}
    {/case}
  </div>
</div>